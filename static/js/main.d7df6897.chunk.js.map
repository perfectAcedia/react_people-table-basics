{"version":3,"sources":["components/NavBar/NavBar.tsx","components/Pages/HomePage.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/Links/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getActiveLink","isActive","classNames","NavBar","className","role","to","HomePage","Loader","getAll","delay","Promise","resolve","setTimeout","then","fetch","response","json","catch","Error","getPerson","name","people","find","person","PersonLink","father","useMemo","fatherName","mother","motherName","slug","sex","born","died","PeopleTable","useParams","map","PeoplePage","useState","visiblePeople","setVisiblePeople","loading","setLoading","error","setError","useEffect","peopleFromServer","finally","length","NotFoundPage","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d7df6897.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getActiveLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getActiveLink}>Home</NavLink>\n          <NavLink to=\"/people\" className={getActiveLink}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getAll(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL)\n      .then(response => response.json())\n      .catch(() => {\n        throw new Error('Something went wrong');\n      }));\n}\n","/* eslint-disable no-nested-ternary */\nimport { Link } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nfunction getPerson(name: string | null, people: Person[]) {\n  return people.find(person => person.name === name) || null;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const father = useMemo(() => {\n    return getPerson(person.fatherName, people);\n  }, []);\n\n  const mother = useMemo(() => {\n    return getPerson(person.motherName, people);\n  }, []);\n\n  return (\n    <>\n      <td>\n        <Link\n          to={`../${person?.slug}`}\n          className={classNames(null,\n            { 'has-text-danger': person?.sex === 'f' })}\n        >\n          {person?.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.motherName\n          ? (\n            mother\n              ? (\n                <Link\n                  to={`../${mother.slug}`}\n                  className=\"has-text-danger\"\n                >\n                  {mother.name}\n                </Link>\n              )\n              : person.motherName\n          )\n          : '-'}\n      </td>\n      <td>\n        {person.fatherName\n          ? (\n            father\n              ? (\n                <Link\n                  to={`../${father.slug}`}\n                >\n                  {father.name}\n                </Link>\n              )\n              : person.fatherName\n          )\n          : '-'}\n      </td>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../Links/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped\n                  is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(null, {\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <PersonLink\n              person={person}\n              people={people}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getAll } from '../../utils/fetchClient';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [visiblePeople, setVisiblePeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getAll()\n      .then((peopleFromServer) => {\n        setVisiblePeople(peopleFromServer);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {error\n              ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )\n              : (\n                loading\n                  ? <Loader />\n                  : visiblePeople.length === 0\n                    ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )\n                    : (\n                      <PeopleTable people={visiblePeople} />\n                    )\n              )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}