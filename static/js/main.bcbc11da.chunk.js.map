{"version":3,"sources":["components/NavBar/NavBar.tsx","components/Pages/HomePage.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/Links/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getActiveLink","isActive","classNames","NavBar","className","role","to","replace","HomePage","Loader","getAll","delay","Promise","resolve","setTimeout","then","fetch","response","json","catch","Error","PersonLink","person","getMother","useMemo","mother","slug","name","motherName","getFather","father","fatherName","sex","born","died","PeopleTable","people","error","useParams","length","map","PeoplePage","useState","setPeople","loading","setLoading","setError","useEffect","peopleFromServer","finally","visiblePeople","find","NotFoundPage","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bcbc11da.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getActiveLink = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getActiveLink}\n            replace\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={getActiveLink}\n            replace\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getAll(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL)\n      .then(response => response.json())\n      .catch(() => {\n        throw new Error('Something went wrong');\n      }));\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const getMother = useMemo(() => {\n    return person.mother\n      ? (\n        <Link\n          to={`../${person.mother.slug}`}\n          className=\"has-text-danger\"\n        >\n          {person.mother.name}\n        </Link>\n      )\n      : person.motherName;\n  }, []);\n\n  const getFather = useMemo(() => {\n    return person.father\n      ? (\n        <Link\n          to={`../${person.father.slug}`}\n        >\n          {person.father.name}\n        </Link>\n      )\n      : person.fatherName;\n  }, []);\n\n  return (\n    <>\n      <td>\n        <Link\n          to={`../${person?.slug}`}\n          className={classNames(null,\n            { 'has-text-danger': person?.sex === 'f' })}\n        >\n          {person?.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.motherName ? getMother : '-'}\n      </td>\n      <td>\n        {person.fatherName ? getFather : '-'}\n      </td>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../Links/PersonLink';\n\ntype Props = {\n  people: Person[],\n  error: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, error }) => {\n  const { slug } = useParams();\n\n  if (error) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped\n                  is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.length === 0\n          ? (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )\n          : (\n            people.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={classNames(null, {\n                  'has-background-warning': person.slug === slug,\n                })}\n              >\n                <PersonLink person={person} />\n              </tr>\n            ))\n          )}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getAll } from '../../utils/fetchClient';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getAll()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const visiblePeople = people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loading ? (\n              <Loader />\n            ) : (\n              <PeopleTable people={visiblePeople} error={error} />\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}